2400. Number of Ways to Reach a Position After Exactly k Steps

class Solution {
public:

     long long dp[4001][1001];
     const long mod=1e9+7;
     long long  count(int current, int target, int k){
     if(k==0&& current==target){
         return 1;
     }
     if(k==0){
         return 0;
     }
     if(dp[current+1000][k]!=-1){
         return dp[current+1000][k];
     }
     long long a=count(current+1,target,k-1);
     a+=count(current-1,target,k-1);

     return dp[current+1000][k] = a%mod;
     }
    int numberOfWays(int    startPos, int endPos, int k) {
       for(int i=0;i<=3001;i++){
           for(int j=0;j<=k;j++){
               dp[i][j]=-1;
           }
       }
       long long ans = count(startPos, endPos, k);
       return ans%mod;
        
    }
};
