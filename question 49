2741. Special Permutations

class Solution {
public:
    int mod=1e9+7;
    int prem(int prev,int mask, vector<vector<int>>& dp,vector<int>& nums, int count){
        if(count==nums.size()) return 1;
        if(dp[prev][mask]!=-1){
            return dp[prev][mask];
        }
        long long ways=0;
        for(int i=0;i<nums.size();i++){
            if(mask & (1<<i)){
                continue;
            }
            if(mask!=0 &&  nums[prev] % nums[i]!=0 && nums[i] % nums[prev]!=0){
                continue;
            }
            ways=(ways+prem(i,mask|(1<<i), dp, nums, count+1))%mod;
        }
        return dp[prev][mask]=ways;
    }
    int specialPerm(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>>dp(n,vector<int>(1<<(n),-1));
        int mask=0;
        int prev=0;
        int count=0;
        return prem(prev,mask,dp,nums,count);
    }
};
